# Azure DevOps CI Pipeline for Simplifier MCP Server
# Runs unit tests and publishes test results

trigger:
  branches:
    include:
      - main
      - develop
      - feature/*
  paths:
    exclude:
      - README.md
      - CLAUDE.md
      - .gitignore

pr:
  branches:
    include:
      - main
      - develop
  paths:
    exclude:
      - README.md
      - CLAUDE.md
      - .gitignore

pool:
  vmImage: 'ubuntu-latest'

variables:
  nodeVersion: '18.x'

jobs:
- job: Build_and_Test
  displayName: 'Build and Test'

  steps:
  - task: NodeTool@0
    displayName: 'Install Node.js'
    inputs:
      versionSpec: $(nodeVersion)

  - task: Cache@2
    displayName: 'Cache npm dependencies'
    inputs:
      key: 'npm | "$(Agent.OS)" | package-lock.json'
      restoreKeys: |
        npm | "$(Agent.OS)"
      path: $(Pipeline.Workspace)/.npm

  - script: |
      npm config set cache $(Pipeline.Workspace)/.npm
      npm ci
    displayName: 'Install dependencies'

  - script: |
      npm run build
    displayName: 'Build TypeScript'

  - script: |
      npm test -- --ci --coverage --testResultsProcessor=jest-junit
    displayName: 'Run unit tests'
    env:
      SIMPLIFIER_BASE_URL: 'http://localhost:8080'
      NODE_ENV: 'test'
      JEST_JUNIT_OUTPUT_DIR: $(Agent.TempDirectory)/test-results
      JEST_JUNIT_OUTPUT_NAME: test-results.xml

  - task: PublishTestResults@2
    displayName: 'Publish test results'
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '$(Agent.TempDirectory)/test-results/test-results.xml'
      failTaskOnFailedTests: true
      testRunTitle: 'Unit Tests'

  - script: |
      SIMPLIFIER_BASE_URL="http://local.host"
      SIMPLIFIER_TOKEN=TEST
      echo '{"jsonrpc": "2.0", "id": 1, "method": "tools/list"}' | node dist/index.js
    displayName: 'Test MCP Server functionality'
    env:
      SIMPLIFIER_BASE_URL: 'http://localhost:8080'
      NODE_ENV: 'test'

  # - task: PublishBuildArtifacts@1
  #   displayName: 'Publish build artifacts'
  #   condition: succeeded()
  #   inputs:
  #     PathtoPublish: 'dist'
  #     ArtifactName: 'dist'
  #     publishLocation: 'Container'